[{"C:\\chess-online\\Chess-client\\src\\reportWebVitals.js":"1","C:\\chess-online\\Chess-client\\src\\components\\ChessBoard.js":"2","C:\\chess-online\\Chess-client\\src\\hooks.js":"3","C:\\chess-online\\Chess-client\\src\\index.js":"4","C:\\chess-online\\Chess-client\\src\\components\\Chess.js":"5","C:\\chess-online\\Chess-client\\src\\components\\Login.js":"6","C:\\chess-online\\Chess-client\\src\\components\\Users.js":"7"},{"size":375,"mtime":1618437201967,"results":"8","hashOfConfig":"9"},{"size":2458,"mtime":1618437201961,"results":"10","hashOfConfig":"9"},{"size":172,"mtime":1618437201964,"results":"11","hashOfConfig":"9"},{"size":547,"mtime":1618437201966,"results":"12","hashOfConfig":"9"},{"size":821,"mtime":1618437201961,"results":"13","hashOfConfig":"9"},{"size":1379,"mtime":1618445458932,"results":"14","hashOfConfig":"9"},{"size":110,"mtime":1618437201964,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"xcijmw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\chess-online\\Chess-client\\src\\reportWebVitals.js",[],["33","34"],"C:\\chess-online\\Chess-client\\src\\components\\ChessBoard.js",["35"],"import React, { useEffect, useState } from 'react';\r\nimport Chessboard from 'chessboardjsx';\r\nimport { useImmer } from 'use-immer';\r\n\r\nconst Chess = require('chess.js');\r\n\r\nconst App = ({ socket, game, username }) => {\r\n\tconst { id } = game;\r\n\tconst [chess] = useState(new Chess(game.fen));\r\n\tconst [messages, setMessages] = useImmer([]);\r\n\tconst [value, setValue] = useState([]);\r\n\tconst [fen, setFen] = useState(chess.fen());\r\n\tconst [turn, setTurn] = useState(game.turn);\r\n\r\n\tconsole.log(game);\r\n\tconst player =\r\n\t\tgame.playerOne.username === username ? game.playerOne : game.playerTwo;\r\n\r\n\tconst sendMessage = () => {\r\n\t\tconsole.log(game);\r\n\t\tsocket.emit('message', { value, roomID: id });\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(messages);\r\n\t\tsocket.on('chatMessage', (message) => {\r\n\t\t\tsetMessages((draft) => {\r\n\t\t\t\tdraft.push([message]);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Listen for moves\r\n\t\tsocket.on('move', (data) => {\r\n\t\t\tconst { fen, move, turn } = data;\r\n\r\n\t\t\tconsole.log(turn);\r\n\t\t\tchess.move(move);\r\n\r\n\t\t\t// Set new fen\r\n\t\t\tsetFen(fen);\r\n\r\n\t\t\t//Set new turn\r\n\t\t\tsetTurn(turn);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst handleMove = (move) => {\r\n\t\t// Check if it's players turn\r\n\t\tconsole.log(game.turn);\r\n\t\tconsole.log(player.color);\r\n\t\tif (turn !== player.color) return;\r\n\r\n\t\t// Check if move is legal\r\n\t\tif (chess.move(move)) {\r\n\t\t\t// Send move to server\r\n\t\t\tsocket.emit('move', { move, id: game.id, fen: chess.fen() });\r\n\t\t} else {\r\n\t\t\talert('Move is illegal!');\r\n\t\t}\r\n\t};\r\n\r\n\t// const handleMove = (move) => {\r\n\t//   if (chess.move(move)) {\r\n\t//     setTimeout(() => {\r\n\t//       const moves = chess.moves();\r\n\r\n\t//       if (moves.length > 0) {\r\n\t//         const computerMove = moves[Math.floor(Math.random() * moves.length)];\r\n\t//         chess.move(computerMove);\r\n\t//         setFen(chess.fen());\r\n\t//       }\r\n\t//     }, 300);\r\n\r\n\t//     setFen(chess.fen());\r\n\t//   }\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div className=\"flex-center\">\r\n\t\t\t<h1>Random Chess</h1>\r\n\t\t\t<Chessboard\r\n\t\t\t\twidth={400}\r\n\t\t\t\tposition={fen}\r\n\t\t\t\tonDrop={(move) =>\r\n\t\t\t\t\thandleMove({\r\n\t\t\t\t\t\tfrom: move.sourceSquare,\r\n\t\t\t\t\t\tto: move.targetSquare,\r\n\t\t\t\t\t\tpromotion: 'q',\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\torientation={player.color}\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t\t{messages.map((message, index) => (\r\n\t\t\t\t\t<div key={index}>{message}</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<input value={value} onChange={(e) => setValue(e.target.value)} />\r\n\t\t\t<button onClick={sendMessage}>submit</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","C:\\chess-online\\Chess-client\\src\\hooks.js",["36","37"],"import { BrowserRouter as Router, Link, useLocation } from 'react-router-dom';\r\n\r\nexport const useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n","C:\\chess-online\\Chess-client\\src\\index.js",[],"C:\\chess-online\\Chess-client\\src\\components\\Chess.js",["38","39"],"C:\\chess-online\\Chess-client\\src\\components\\Login.js",["40"],"C:\\chess-online\\Chess-client\\src\\components\\Users.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":45,"column":5,"nodeType":"47","endLine":45,"endColumn":7,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":33},{"ruleId":"49","severity":1,"message":"53","line":1,"column":35,"nodeType":"51","messageId":"52","endLine":1,"endColumn":39},{"ruleId":"49","severity":1,"message":"54","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"55","line":16,"column":5,"nodeType":"47","endLine":16,"endColumn":7,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":55,"column":6,"nodeType":"59","endLine":55,"endColumn":28},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chess', 'messages', 'setMessages', and 'socket'. Either include them or remove the dependency array.","ArrayExpression",["62"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Fragment' is defined but never used.","React Hook useEffect has missing dependencies: 'socket' and 'username'. Either include them or remove the dependency array.",["63"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [chess, messages, setMessages, socket]",{"range":"68","text":"69"},"Update the dependencies array to be: [socket, username]",{"range":"70","text":"71"},[1095,1097],"[chess, messages, setMessages, socket]",[484,486],"[socket, username]"]